{"version":3,"file":"static/js/659.c41cb427.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","components/MoviesPage/MoviesPage.jsx","components/Services/Services.jsx","webpack://goit-react-hw-05-movies/./src/components/HomePage/HomePage.module.css?b0f5"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchForm_input__HOxJo\"};","import { useState } from \"react\";\nimport {PropTypes} from 'prop-types';\nimport toast from \"react-hot-toast\";\nimport s from './SearchForm.module.css';\n\n\nexport default function SearchForm({onSubmit}) {\n    const [movieName, setMovieName] = useState('');\n\n        const handleChange = evt => {\n        setMovieName(evt.currentTarget.value.toLowerCase());\n    }\n\n        const handleSubmit = evt => {\n        evt.preventDefault();\n            if (movieName.trim() === '') {\n                return toast.error('Enter your request');\n            }\n            onSubmit(movieName);\n            setMovieName('');\n    }\n\n    return (\n         <div>\n            <form onSubmit={handleSubmit}>\n                <input className={s.input}\n                    type=\"text\"\n                    name=\"query\"\n      autoComplete=\"off\"\n      autoFocus\n            placeholder=\"Enter movie name\"\n            value={movieName}\n            onChange={handleChange}/>\n            <button type=\"submit\">Search</button>\n            </form>\n        </div>\n    )\n}\n\nSearchForm.propTypes = {\nonSubmit: PropTypes.func.isRequired\n}","import { useState, useEffect } from \"react\";\nimport { fetchMoviesByName } from '../Services/Services';\nimport { Link, useSearchParams, useLocation } from \"react-router-dom\";\nimport toast from 'react-hot-toast';\nimport Loader from \"components/Loader\";\nimport SearchForm from \"../SearchForm\";\nimport s from '../HomePage/HomePage.module.css';\n\nexport default function MoviesPage() {\n    // const [movieName, setMovieName] = useState('');\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    // const [error, setError] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const location = useLocation();\n    const currentItem = searchParams.get('query');\n\n    async function searchMovies(movieName) {\n         if (!movieName) {\n      return\n        }\n            setLoading(true);\n    try {\n        const movies = await fetchMoviesByName(movieName);\n        if (movies.length === 0) {\n            toast.error('Movie not found');\n            return;\n        }\n        setMovies(movies);\n    } catch (error) {\n         toast.error(\"Movie not found\")\n    } finally {\n        setLoading(false);\n    }\n        }\n   \n    const formSubmitSearch = (movieName) => {\n        setSearchParams({query: movieName })\n        // setMovieName(movieName);\n        searchMovies(movieName);\n    }\n    useEffect(() => {\n        if (currentItem) {\n            searchMovies(currentItem);\n        }\n    }, [currentItem])\n    \n    return (\n        <div>\n       <SearchForm onSubmit={formSubmitSearch}/>\n        {loading && <Loader/>}\n           {movies &&  <ol className={s.list}>\n                {movies.map((movie => <li className={s.item} key={movie.id}>\n                    <Link className={s.link} to={`/movies/${movie.id}`} state={{from: location}}>{movie.title}</Link>\n                </li>))}\n            </ol>}\n            </div>\n    )\n}","import axios from \"axios\";\nconst API_KEY = '748a876d129f7e921766cb9e00600a21';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchMoviesByName = async (movieName, page) => {\n    const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&page=${page}&language=en&query=${movieName}`,\n  );\nconst searchMoviesData = await response.data.results;\n//   if (popularMoviesData.results.length === 0) {\n//     // throw new Error(failure());\n//     // throw new Error(`Not found ${searchQuery}`);\n//   }\n  return searchMoviesData;\n}\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n  const trandingMoviesData = await response.data.results;\n  return trandingMoviesData;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchActorsDetails = async movieId => {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n  const actorsDetails = await response.data;\n  return actorsDetails;\n};\n\nexport const fetchReviewDetails = async movieId => {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  const reviewDetails = await response.data;\n  return reviewDetails;\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"HomePage_list__JTEtR\",\"link\":\"HomePage_link__V6y8d\",\"item\":\"HomePage_item__pwdYU\"};"],"names":["SearchForm","onSubmit","useState","movieName","setMovieName","evt","preventDefault","trim","toast","className","s","type","name","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","MoviesPage","movies","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","location","useLocation","currentItem","get","searchMovies","fetchMoviesByName","length","useEffect","query","Loader","map","movie","to","id","state","from","title","API_KEY","BASE_URL","page","axios","response","data","results","searchMoviesData","fetchTrendingMovies","trandingMoviesData","fetchMovieDetails","fetchActorsDetails","movieId","actorsDetails","fetchReviewDetails","reviewDetails"],"sourceRoot":""}