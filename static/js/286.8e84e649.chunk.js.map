{"version":3,"file":"static/js/286.8e84e649.chunk.js","mappings":"mSACA,EAA+B,uCAA/B,EAAkF,oCAAlF,EAAkI,oCAAlI,EAA+K,iCAA/K,EAAuN,+BAAvN,EAAwQ,0CAAxQ,EAAsU,4CAAtU,EAA6X,mCAA7X,EAA+a,uCAA/a,EAAke,oCAAle,EAAshB,wCAAthB,EAA0kB,oCAA1kB,EAAgoB,0C,SCOjnB,SAASA,IAAgB,IAAD,IAC3BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAS,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,KAE3CC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,2FACIN,GAAW,GADf,mBAGwBO,EAAAA,EAAAA,IAAkBb,GAH1C,OAGUG,EAHV,OAIIC,EAASD,GAJb,gDAMIW,EAAAA,GAAAA,MAAY,kBANhB,yBAQIR,GAAW,GARf,6EADY,uBAAC,WAAD,wBAYZS,KACD,CAACf,IAGJ,OAEI,2BACKK,IAAW,SAACW,EAAA,EAAD,KACZ,iBAAKC,UAAWC,EAAhB,WACQ,SAAC,MAAD,CAAsBD,UAAWC,KACjC,SAAC,KAAD,CAAOC,GAAIV,EAAX,yBAEPN,IAAS,4BAEN,iBAAKc,UAAWC,EAAhB,WACA,gBAAKD,UAAWC,EAAUE,IAAKjB,EAAMkB,YAAN,yCAAsDlB,EAAMkB,aAZpF,0EAYmHC,IAAKnB,EAAMoB,SAErI,gBAAIN,UAAWC,EAAf,WAAuB,gBAAID,UAAWC,EAAf,WACf,eAAID,UAAWC,EAAf,SAAqCf,EAAMoB,SAEnD,oCAAYpB,EAAMqB,aAAerB,EAAMqB,aAAe,kCAEtD,gBAAIP,UAAWC,EAAf,WACY,eAAID,UAAWC,EAAf,sBACCf,EAAMsB,UAAW,uBAAItB,EAAMsB,YAAgB,mEAGxD,gBAAIR,UAAWC,EAAf,WACQ,eAAID,UAAWC,EAAf,qBACI,gBAAKD,UAAWC,EAAhB,SACKf,EAAMuB,OAAOC,OAAS,GAAI,uBAAIxB,EAAMuB,OAAOE,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,SAAa,uDAK3G,iBAAKd,UAAWC,EAAhB,WACI,cAAGD,UAAWC,EAAd,qCACA,2BACG,eAAID,UAAWC,EAAf,UAAgC,SAAC,KAAD,CAASD,UAAW,qBAAEe,SAAyBd,EAAoBA,GAAaC,GAAE,kBAAahB,EAAM8B,GAAnB,SAA8BvB,MAAO,CAACC,KAAMF,GAA9H,qBAC/B,eAAIQ,UAAWC,EAAf,UAAgC,SAAC,KAAD,CAASD,UAAW,qBAAEe,SAAyBd,EAAoBA,GAAaC,GAAE,kBAAahB,EAAM8B,GAAnB,YAAiCvB,MAAO,CAACC,KAAMF,GAAjI,iCAKxC,SAAC,KAAD,S,0MCtENyB,EAAU,mCACVC,EAAW,+BAEJC,EAAiB,mCAAG,WAAOC,EAAWC,GAAlB,yFACNC,IAAAA,IAAA,UACpBJ,EADoB,iCACaD,EADb,iBAC6BI,EAD7B,8BACuDD,IAFjD,cACvBG,EADuB,gBAIFA,EAASC,KAAKC,QAJZ,cAI3BC,EAJ2B,yBASxBA,GATwB,2CAAH,wDAYjBC,EAAmB,mCAAG,sGACVL,IAAAA,IAAA,UAAaJ,EAAb,uCAAoDD,IAD1C,cAC3BM,EAD2B,gBAEAA,EAASC,KAAKC,QAFd,cAE3BG,EAF2B,yBAG1BA,GAH0B,2CAAH,qDAMnBhC,EAAiB,mCAAG,WAAMoB,GAAN,uFACRM,IAAAA,IAAA,UAAaJ,EAAb,kBAA+BF,EAA/B,oBAA6CC,IADrC,cACzBM,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBK,EAAkB,mCAAG,WAAM9C,GAAN,yFACTuC,IAAAA,IAAA,UAAaJ,EAAb,kBAA+BnC,EAA/B,4BAA0DkC,IADjD,cAC1BM,EAD0B,gBAEJA,EAASC,KAFL,cAE1BM,EAF0B,yBAGzBA,GAHyB,2CAAH,sDAMlBC,EAAkB,mCAAG,WAAMhD,GAAN,yFACTuC,IAAAA,IAAA,UAAaJ,EAAb,kBAA+BnC,EAA/B,4BAA0DkC,IADjD,cAC1BM,EAD0B,gBAEJA,EAASC,KAFL,cAE1BQ,EAF0B,yBAGzBA,GAHyB,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.jsx","components/Services/Services.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"arrowLinkBox\":\"MovieDetailsPage_arrowLinkBox__oicNd\",\"arrowLink\":\"MovieDetailsPage_arrowLink__lvQkQ\",\"container\":\"MovieDetailsPage_container__VyXai\",\"poster\":\"MovieDetailsPage_poster__Q+ne9\",\"list\":\"MovieDetailsPage_list__div34\",\"movieDetailItem\":\"MovieDetailsPage_movieDetailItem__ND3EV\",\"movieDetailsTitle\":\"MovieDetailsPage_movieDetailsTitle__Y+T1R\",\"genreBox\":\"MovieDetailsPage_genreBox__UdS3a\",\"movieInfoBox\":\"MovieDetailsPage_movieInfoBox__c-GV8\",\"movieInfo\":\"MovieDetailsPage_movieInfo__NuFQu\",\"movieInfoLink\":\"MovieDetailsPage_movieInfoLink__+yfwx\",\"routeLink\":\"MovieDetailsPage_routeLink__omOzG\",\"routeLinkActive\":\"MovieDetailsPage_routeLinkActive__aW1v2\"};","import { fetchMovieDetails } from '../Services/Services';\nimport { useParams, Outlet, NavLink, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { FaArrowAltCircleLeft } from 'react-icons/fa';\nimport Loader from 'components/Loader';\nimport toast from 'react-hot-toast';\nimport s from './MovieDetailsPage.module.css';\n\nexport default function MovieDetails() {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const location = useLocation();\n    const goBackURL = location?.state?.from ?? '/';\n    \n    useEffect(() => {\n        async function fetchMovie() {\n            setLoading(true);\n        try {\n            const movie = await fetchMovieDetails(movieId);\n            setMovie(movie);\n        } catch (error) {\n            toast.error(\"Movie no found\")\n        } finally {\n            setLoading(false);\n        }\n        }\n        fetchMovie();\n    }, [movieId])\n\n    const defaultPoster = `https://i.pinimg.com/200x/e4/71/1e/e4711e46bea5264eaab661d643285ff6.jpg`;\n    return (\n        \n        <div>\n            {loading && <Loader />}\n            <div className={s.arrowLinkBox}>\n                    <FaArrowAltCircleLeft className={s.arrowLink} />\n                    <Link  to={goBackURL}> Go back</Link>\n                    </div>\n            {movie && <div>\n                \n                <div className={s.container}>\n                <img className={s.poster} src={movie.poster_path ? `https://image.tmdb.org/t/p/w300${movie.poster_path}` : defaultPoster} alt={movie.title}\n                />\n                <ul className={s.list}><li className={s.movieDetailItem}>\n                        <h2 className={s.movieDetailsTitle}>{movie.title}</h2>\n                        \n                <p>Rating: {movie.vote_average ? movie.vote_average : 'No rating for that movie'}</p>\n            </li>\n                <li className={s.movieDetailItem}>\n                            <h3 className={s.movieDetailsTitle}>Overview</h3>\n                            {movie.overview ? <p>{movie.overview}</p> : <p>There is no overview for that movie</p>}\n                    \n            </li>\n                <li className={s.movieDetailItem}>\n                        <h4 className={s.movieDetailsTitle}>Genres</h4>\n                            <div className={s.genreBox}>\n                                {movie.genres.length > 0 ? <p>{movie.genres.map(genre => genre.name).join(', ')}</p> : <p>No genres found</p>}\n                                \n                    </div>\n                        </li></ul>\n                    </div>\n            <div className={s.movieInfoBox}>\n                <p className={s.movieInfo}>Additional information</p>\n                <ul>\n                   <li className={s.movieInfoLink}><NavLink className={({isActive}) => isActive ? s.routeLinkActive : s.routeLink} to={`/movies/${movie.id}/cast`} state={{from: goBackURL}}>Cast</NavLink></li>\n                    <li className={s.movieInfoLink}><NavLink className={({isActive}) => isActive ? s.routeLinkActive : s.routeLink} to={`/movies/${movie.id}/reviews`} state={{from: goBackURL}}>Reviews</NavLink></li>\n                </ul>\n                    </div>\n            </div>}\n            \n            <Outlet/>\n        </div>\n    )\n}\n\n","import axios from \"axios\";\nconst API_KEY = '748a876d129f7e921766cb9e00600a21';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchMoviesByName = async (movieName, page) => {\n    const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&page=${page}&language=en&query=${movieName}`,\n  );\nconst searchMoviesData = await response.data.results;\n//   if (popularMoviesData.results.length === 0) {\n//     // throw new Error(failure());\n//     // throw new Error(`Not found ${searchQuery}`);\n//   }\n  return searchMoviesData;\n}\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n  const trandingMoviesData = await response.data.results;\n  return trandingMoviesData;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchActorsDetails = async movieId => {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n  const actorsDetails = await response.data;\n  return actorsDetails;\n};\n\nexport const fetchReviewDetails = async movieId => {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  const reviewDetails = await response.data;\n  return reviewDetails;\n};"],"names":["MovieDetails","movieId","useParams","useState","movie","setMovie","loading","setLoading","location","useLocation","goBackURL","state","from","useEffect","fetchMovieDetails","toast","fetchMovie","Loader","className","s","to","src","poster_path","alt","title","vote_average","overview","genres","length","map","genre","name","join","isActive","id","API_KEY","BASE_URL","fetchMoviesByName","movieName","page","axios","response","data","results","searchMoviesData","fetchTrendingMovies","trandingMoviesData","fetchActorsDetails","actorsDetails","fetchReviewDetails","reviewDetails"],"sourceRoot":""}